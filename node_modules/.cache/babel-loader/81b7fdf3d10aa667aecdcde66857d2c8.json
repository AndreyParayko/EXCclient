{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\pack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\pack\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\pack\\\\client\\\\src\\\\components\\\\Register\\\\Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport './register.scss';\n\nconst Register = ({\n  setAlert\n}) => {\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n    surname: '',\n    info: '',\n    login: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const name = formData.name,\n        surname = formData.surname,\n        info = formData.info,\n        login = formData.login,\n        email = formData.email,\n        password = formData.password,\n        password2 = formData.password2;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords not match', 'danger');\n    } else {\n      console.log('SUCCESS');\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"register\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"registerText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    size: \"40\",\n    placeholder: \" Name:\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    size: \"40\",\n    placeholder: \" Surname:\",\n    name: \"surname\",\n    value: surname,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    size: \"40\",\n    placeholder: \" Login: \",\n    name: \"login\",\n    value: login,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    size: \"40\",\n    type: \"email\",\n    placeholder: \" Email:\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    size: \"40\",\n    type: \"password\",\n    placeholder: \" Password:\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    size: \"40\",\n    type: \"password\",\n    placeholder: \" Confirm Password:\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    required: true,\n    minLength: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text-area\",\n    size: \"82\",\n    placeholder: \"  Other (Skype, Telegram, Facebook, Instagram, Etc): \",\n    name: \"info\",\n    value: info,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"okButton\",\n    type: \"submit\",\n    value: \"\\u043E\\u043A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/Андрей/Desktop/pack/client/src/components/Register/Register.js"],"names":["React","Fragment","useState","connect","setAlert","register","PropTypes","Register","name","email","password","password2","surname","info","login","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './register.scss';\r\n\r\nconst Register = ({ setAlert }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    surname: '',\r\n    info: '',\r\n    login: ''\r\n  });\r\n\r\n  const { name, surname, info, login, email, password, password2 } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords not match', 'danger');\r\n    } else {\r\n      console.log('SUCCESS');\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form className='register' onSubmit={e => onSubmit(e)}>\r\n        <div className='inputs'>\r\n          <span className='registerText'>Register</span>\r\n          <br></br>\r\n          <input\r\n            type='text'\r\n            size='40'\r\n            placeholder=' Name:'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          ></input>\r\n          <input\r\n            type='text'\r\n            size='40'\r\n            placeholder=' Surname:'\r\n            name='surname'\r\n            value={surname}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          ></input>\r\n          <input\r\n            type='text'\r\n            size='40'\r\n            placeholder=' Login: '\r\n            name='login'\r\n            value={login}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          ></input>\r\n          <input\r\n            size='40'\r\n            type='email'\r\n            placeholder=' Email:'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          ></input>\r\n          <input\r\n            size='40'\r\n            type='password'\r\n            placeholder=' Password:'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            required\r\n            minLength='6'\r\n          ></input>\r\n          <input\r\n            size='40'\r\n            type='password'\r\n            placeholder=' Confirm Password:'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            required\r\n            minLength='6'\r\n          ></input>\r\n          <input\r\n            type='text-area'\r\n            size='82'\r\n            placeholder='  Other (Skype, Telegram, Facebook, Instagram, Etc): '\r\n            name='info'\r\n            value={info}\r\n            onChange={e => onChange(e)}\r\n          ></input>\r\n          <input id='okButton' type='submit' value='ок'></input>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { setAlert, register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}